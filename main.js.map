{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/auth.interceptor.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/projects.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<button *ngIf=\\\"!isLoggedIn()\\\" (click)=\\\"login()\\\">Login</button>\\n<button *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"logout()\\\">Logout</button>\\n<button *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"getToken()\\\">Get Token</button>\\n<button *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"getProjects()\\\">Get Projects</button>\\n<hr>\\n<div *ngIf=\\\"!isLoggedIn()\\\">\\n<strong>Please login to see more updates</strong>\\n</div>\\n<div *ngIf=\\\"isLoggedIn()\\\">\\n    <table>\\n        <tr *ngFor=\\\"let x of project\\\">\\n            <td>{{x.name }}</td>\\n        </tr>\\n    </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport {Router} from '@angular/router';\nimport { ProjectService } from './services/projects.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  project:Observable<any>;\n  ngOnInit(): void {\n    console.log(window.location.href);\n   if(window.location.href.indexOf('?postLogout=true')>0){\n     this.authService.signoutRedirectCallback().then(x=>{\n       let url:string=this.router.url.substring(0,this.router.url.indexOf('?'));\n       console.log(\"url\"+url);\n       this.router.navigateByUrl(url);\n     });\n   }\n  }\n  title = 'test-login-app';\n  constructor(private authService:AuthService,private router:Router,private projectService:ProjectService){\n\n  }\n  login(){\n    console.log('app component');\n    this.authService.login();\n  }\n  logout(){\n    this.authService.logout();\n  }\n\n  getToken(){\n    console.log(this.authService.getAccessToken());\n  }\n  getProjects(){\n    if(this.authService.isLoggedIn){\n      this.projectService.getProjects().subscribe(x=>this.project=x);\n    }\n  }\n  isLoggedIn():boolean{\n    return this.authService.isLoggedIn();\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './services/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path:'root',component:AppComponent},\n      {path:'', redirectTo:'root', pathMatch:'full'}\n    ])\n  ],\n  providers: [\n    {provide:HTTP_INTERCEPTORS,useClass:AuthInterceptor,multi:true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService:AuthService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let accessToken=this.authService.getAccessToken();\r\n        const headers = req.headers\r\n            .set('Authorization', `Bearer ${accessToken}`);\r\n        const authReq = req.clone({ headers });\r\n        return next.handle(authReq);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {UserManager,User, WebStorageStateStore} from 'oidc-client';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n    private _userManager:UserManager;\r\n    private _user:User;\r\n    constructor() { \r\n        var config={\r\n            authority:'https://securingangularappscourse-sts.azurewebsites.net/',\r\n            client_id:'spa-client',\r\n            redirect_uri:'http://localhost:4200/assets/oidc-login-redirect.html',\r\n            scope:'openid projects-api profile',\r\n            response_type:'id_token token',\r\n            post_logout_redirect_url:'http://localhost:4200/?postLogout=true',\r\n            userStore:new WebStorageStateStore({store:window.localStorage}),\r\n            automaticSilentRenew:true\r\n        };\r\n        this._userManager=new UserManager(config);\r\n        this._userManager.getUser().then(user=>{\r\n            if( user && !user.expired){\r\n                this._user=user;\r\n                console.log(this._user);\r\n            }\r\n        });\r\n    }\r\n    login():Promise<any>{\r\n        console.log('auth service login method');\r\n        return this._userManager.signinRedirect();\r\n    }\r\n\r\n    logout(){\r\n        this._userManager.signoutRedirect();\r\n    }\r\n\r\n    isLoggedIn():boolean{\r\n        return this._user && this._user.access_token && !this._user.expired\r\n    }\r\n\r\n    getAccessToken():string{\r\n        return this._user.access_token;\r\n    }\r\n    signoutRedirectCallback():Promise<any>{\r\n        return this._userManager.signoutRedirectCallback();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ProjectService {\r\n    projects:Observable<any>;\r\n    constructor(private httpClient: HttpClient,private authService:AuthService) { }\r\n    getProjects():Observable<any>{\r\n        // let accessToken=this.authService.getAccessToken();\r\n        // var header=new HttpHeaders().set('Authorization',`Bearer ${accessToken}`);\r\n        return this.httpClient.get<any>('https://securingangularappscourse-api.azurewebsites.net/api/Projects');\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}